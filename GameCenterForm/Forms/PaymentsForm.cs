using GameCenterForm.ClassLibrary;
using GameCenterForm.DataAccessLayers;
using System.Data;

namespace GameCenterForm.Forms
{
    public partial class PaymentsForm : Form
    {
        DataAccessLayerPayments dataAccessLayer = new();
        public PaymentsForm()
        {
            try
            {
                InitializeComponent();
                FillPaymentGrid();
            }
            catch (Exception ex)
            {
                ErrorHandler.HandleException(ex);
            }
        }

        private void dataGridViewPayments_CellClick(object sender, DataGridViewCellEventArgs e)
        {
            try
            {
                //Returns how many columns there are in the DataGridView
                int columnCount = dataGridViewPayments.Columns.Count;

                if (e.ColumnIndex < columnCount)
                {
                    dataGridViewPayments.CurrentRow.Selected = true;
                }
            }
            catch (Exception ex)
            {
                ErrorHandler.HandleException(ex);
            }
        }

        //In this method, we first set the DataSource property of the DataGridView to the result of
        //calling GetAll().Tables[0]. This will populate the DataGridView with data.

        //Next, we add an event handler for the DataBindingComplete event of the DataGridView.
        //We do this by subscribing to the event with the += operator and passing in the name of the
        //event handler method (dataGridViewPayments_DataBindingComplete). This event handler
        //method will be called when the DataBindingComplete event is raised.

        public void FillPaymentGrid()
        {
            try
            {
                dataGridViewPayments.DataSource = dataAccessLayer.GetBookings().Tables[0];
                dataGridViewPayments.DataBindingComplete += dataGridViewPayments_DataBindingComplete;

            }
            catch (Exception ex)
            {
                ErrorHandler.HandleException(ex);
            }
        }

        //Method dataGridViewPayments_DataBindingComplete and comment generated by ChatGPT
        //This method is called when the DataBindingComplete event is raised. In this method,
        //we simply call the ClearSelection() method of the DataGridView to clear any row selection
        //that may have occurred during the data binding process.

        //By using the DataBindingComplete event to clear the row selection, we ensure that the
        //ClearSelection() method is called after the DataGridView has been populated with data
        //and any row selection has occurred.This should prevent the first row from being selected
        //when the DataGridView is initially displayed.

        private void dataGridViewPayments_DataBindingComplete(object sender, DataGridViewBindingCompleteEventArgs e)
        {
            dataGridViewPayments.ClearSelection();
        }


        private void tBoxPaymentSearch_TextChanged(object sender, EventArgs e)
        {
            try
            {
                // Trim removes leading or trailing white spaces
                string searchText = tBoxPaymentSearch.Text.Trim();

                // Create a DataSet and fill it with all Customers
                DataSet dataSet = dataAccessLayer.Find(searchText);

                dataGridViewPayments.DataSource = dataSet.Tables[0];
            }
            catch (Exception ex)
            {
                ErrorHandler.HandleException(ex);
            }
        }

        private void btnDelete_Click(object sender, EventArgs e)
        {
            try
            {
                // Checking if any row in the DataGridView is selected
                //If no, the user will be notified by a textbox and the method stops here
                if (dataGridViewPayments.SelectedRows.Count == 1)
                {
                    // Get the selected row and put the values in a Payment object
                    DataGridViewRow selectedRow = dataGridViewPayments.SelectedRows[0];
                    string paymentID = selectedRow.Cells["PaymentID"].Value.ToString();
                    int amount = (int)selectedRow.Cells["Amount"].Value;
                    DateTime paymentDate = (DateTime)selectedRow.Cells["PaymentDate"].Value;
                    string paymentMethod = selectedRow.Cells["PaymentMethod"].Value.ToString();
                    string customerID = selectedRow.Cells["CustomerID"].Value.ToString();

                    Payment payment = new(paymentID, amount, paymentDate, paymentMethod, customerID);

                    //MessageBox that asks user to confirm deletion
                    DialogResult result =
                        MessageBox.Show(
                            $"You are about to delete ({payment.PaymentID}).\nThis will delete the payment records and\nany bookings related to that payment.\nDon't forget to refund the customer!\n\nDo you want to proceed?",
                            "Confirm deletion",
                            MessageBoxButtons.YesNo,
                            MessageBoxIcon.Warning);

                    //If user presses No nothing happens
                    if (result == DialogResult.No)
                    {
                        return;
                    }
                    dataAccessLayer.Delete(payment);
                    FillPaymentGrid();
                }
                // 0 selected
                else if (dataGridViewPayments.SelectedRows.Count < 1)
                {
                    MessageBox.Show("Please select a paymeny to delete!", "No payment selected",
                        MessageBoxButtons.OK, MessageBoxIcon.Warning);
                }
                //Else too many rows selected
                else
                {
                    MessageBox.Show("Please select only one payment to delete!", "Too many selected",
                        MessageBoxButtons.OK, MessageBoxIcon.Warning);
                }
            }
            catch (Exception ex)
            {
                ErrorHandler.HandleException(ex);
            }
        }
    }
}
